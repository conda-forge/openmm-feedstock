{% set name = "openmm" %}
{% set version = "7.4.0" %}
{% set commit = "7a02c59b7f94c26c7996c2a0c4ef98d5fa4af7cd" %}
{% set build = 7 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/openmm/{{ name }}/archive/{{ commit }}.tar.gz
  sha256: e2a2cf821a271c0107b3c813aec27700b1caf9f796c17eb41450c07f378de30e

build:
  number: {{ build }}
  skip: True  # [py2k or win or (linux64 and cuda_compiler_version == "None")]
  missing_dso_whitelist:
  - "*/libcuda.*"  # [linux]
  - "*/libOpenCL.*"  # [linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - cmake
    - jom  # [win]

  host:
    - python
    - fftw
    - swig
    - pthread-stubs
    - lxml
    - numpy
    - cython
    # needed for Python wrappers
    - doxygen 1.8.14
    # OpenCL ICD
    - ocl-icd  # [linux]
    - ocl-icd-system  # [linux]
    - khronos-opencl-icd-loader  # [osx or win]
    - ocl_icd_wrapper_apple  # [osx]

  run:
    - python
    - fftw
    - numpy

test:
  imports:
    - simtk
    - simtk.openmm
  commands:
    - python -m simtk.testInstallation
    # Existence tests Unix
    - test -f $PREFIX/lib/libOpenMM$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCPU$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMOpenCL$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCUDA$SHLIB_EXT  # [linux]
    # Existence tests Windows
    - if not exist %LIBRARY_LIB%/OpenMM.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMOpenCL.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMCPU.lib exit 1  # [win]
    # Debug silent errors in plugin loading
    - python -c "import simtk.openmm as mm; print(mm.Platform.getPluginLoadFailures())"
    # Debug hardcoded library path (ripgrep issue: https://github.com/conda/conda-build/issues/3737)
    - python -c "import os, simtk.openmm.version as v; print(v.openmm_library_path); assert os.path.isdir(v.openmm_library_path), 'Directory does not exist'"
    ## PLATFORM TESTING ##
    # CUDA and OpenCL platforms will only be available if a device/implementation is available
    # Linux:
    #   There is no way to provide a CUDA device now, but we can install pocl for OpenCL in Linux
    #   Without installing pocl, we will see Reference and CPU -> two platforms
    #   Installing ocl-icd should have no effect
    #   Only after installing pocl we will see the OpenCL platform
    # MacOS:
    #   The system OpenCL installation should be available without installing anything else
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 2, f'# platforms ({n}) != 2'"  # [linux]
    - conda install -y ocl-icd && python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 2, f'# platforms ({n}) != 2'"  # [linux]
    - conda install -y pocl  # [linux]
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 3, f'# platforms ({n}) != 3'"
    - cd ${CONDA_PREFIX}/share/examples/openmm && python benchmark.py --test=rf --seconds=10 --platform=OpenCL; cd -

about:
  home: http://openmm.org
  license: MIT
  license_family: MIT
  license_file: docs-source/licenses/Licenses.txt
  summary: 'A high performance toolkit for molecular simulation.'

  description: |
    OpenMM is a toolkit for molecular simulation. It can be used either as a
    stand-alone application for running simulations, or as a library you call
    from your own code. It provides a combination of extreme flexibility
    (through custom forces and integrators), openness, and high performance
    (especially on recent GPUs) that make it truly unique among simulation
    codes.
  doc_url: http://docs.openmm.org
  dev_url: https://github.com/openmm/openmm

extra:
  recipe-maintainers:
    - jchodera
    - jaimergp
    - peastman
