# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: osx
  pool:
    vmImage: macOS-13
  strategy:
    matrix:
      osx_64_numpy2.0opencl_implapplepython3.10.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implapplepython3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implapplepyth_h6a992f0c27
      osx_64_numpy2.0opencl_implapplepython3.11.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implapplepython3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implapplepyth_h6c07145162
      osx_64_numpy2.0opencl_implapplepython3.12.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implapplepython3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implapplepyth_hf2dbf3ce4b
      osx_64_numpy2.0opencl_implapplepython3.9.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implapplepython3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implapplepyth_hdeaaa7a047
      osx_64_numpy2.0opencl_implkhronospython3.10.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implkhronospython3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implkhronospy_hae3a2aba28
      osx_64_numpy2.0opencl_implkhronospython3.11.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implkhronospython3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implkhronospy_h5d9c91543a
      osx_64_numpy2.0opencl_implkhronospython3.12.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implkhronospython3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implkhronospy_h552d671318
      osx_64_numpy2.0opencl_implkhronospython3.9.____cpython:
        CONFIG: osx_64_numpy2.0opencl_implkhronospython3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2.0opencl_implkhronospy_hefd8b07b87
      osx_64_numpy2opencl_implapplepython3.13.____cp313:
        CONFIG: osx_64_numpy2opencl_implapplepython3.13.____cp313
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2opencl_implapplepython_h7fbf6f1cec
      osx_64_numpy2opencl_implkhronospython3.13.____cp313:
        CONFIG: osx_64_numpy2opencl_implkhronospython3.13.____cp313
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_numpy2opencl_implkhronospyth_h80a17ec7ec
      osx_arm64_numpy2.0opencl_implapplepython3.10.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implapplepython3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implapplep_h8054f2b0f6
      osx_arm64_numpy2.0opencl_implapplepython3.11.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implapplepython3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implapplep_he08e5f3ea1
      osx_arm64_numpy2.0opencl_implapplepython3.12.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implapplepython3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implapplep_hcfe53950b6
      osx_arm64_numpy2.0opencl_implapplepython3.9.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implapplepython3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implapplep_hee895207e0
      osx_arm64_numpy2.0opencl_implkhronospython3.10.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implkhronospython3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implkhrono_h4221d36e0b
      osx_arm64_numpy2.0opencl_implkhronospython3.11.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implkhronospython3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implkhrono_hd561e7cd79
      osx_arm64_numpy2.0opencl_implkhronospython3.12.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implkhronospython3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implkhrono_h9fdd516ff9
      osx_arm64_numpy2.0opencl_implkhronospython3.9.____cpython:
        CONFIG: osx_arm64_numpy2.0opencl_implkhronospython3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2.0opencl_implkhrono_h6466917432
      osx_arm64_numpy2opencl_implapplepython3.13.____cp313:
        CONFIG: osx_arm64_numpy2opencl_implapplepython3.13.____cp313
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2opencl_implapplepyt_hf6a31eac95
      osx_arm64_numpy2opencl_implkhronospython3.13.____cp313:
        CONFIG: osx_arm64_numpy2opencl_implkhronospython3.13.____cp313
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_numpy2opencl_implkhronosp_h071fe453e3
  timeoutInMinutes: 360
  variables: {}

  steps:
  # TODO: Fast finish on azure pipelines?
  - script: |
      export CI=azure
      export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
      export remote_url=$(Build.Repository.Uri)
      export sha=$(Build.SourceVersion)
      export OSX_FORCE_SDK_DOWNLOAD="1"
      export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
        export IS_PR_BUILD="True"
      else
        export IS_PR_BUILD="False"
      fi
      ./.scripts/run_osx_build.sh
    displayName: Run OSX build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
      export CI=azure
      export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      export CONDA_BLD_DIR=/Users/runner/miniforge3/conda-bld
      export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
      # Archive everything in CONDA_BLD_DIR except environments
      export BLD_ARTIFACT_PREFIX=conda_artifacts
      if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
        # Archive the CONDA_BLD_DIR environments only when the job fails
        export ENV_ARTIFACT_PREFIX=conda_envs
      fi
      ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)